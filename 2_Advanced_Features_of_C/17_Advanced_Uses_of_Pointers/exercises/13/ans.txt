struct node *insert_into_ordered_list(struct node *list, struct node *new_node) 
{
    struct node *cur = list, *prev = NULL;
    while (cur->value <= new_node->value) {
        prev = cur;
        cur = cur->next;
    }
    prev->next = new_node;
    new_node->next = cur;
    return list;
}

in case the new value is greater than any in the given list, the program will crash. so, there is a need to
add a check for NULL in the while loop:

struct node *insert_into_ordered_list(struct node *list, struct node *new_node) 
{
    struct node *cur = list, *prev = NULL;
    while (cur != NULL && cur->value <= new_node->value) {
        prev = cur;
        cur = cur->next;
    }
    prev->next = new_node;
    new_node->next = cur;
    return list;
}

we may also add a check for the empty list:

struct node *insert_into_ordered_list(struct node *list, struct node *new_node) 
{
    if (list == NULL) {
        new_node->next = NULL;
        return new_node;
    }

    struct node *cur = list, *prev = NULL;
    while (cur != NULL && cur->value <= new_node->value) {
        prev = cur;
        cur = cur->next;
    }
    prev->next = new_node;
    new_node->next = cur;
    return list;
}

